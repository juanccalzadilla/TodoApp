{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/Alert.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","handleToggle","handleDelete","index","className","onClick","desc","TodoList","i","Alert","message","TodoAdd","handleAdd","initialState","useState","values","setValues","target","name","value","useForm","description","handleInput","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","onChange","placeholder","autoComplete","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee70d788.chunk.js","sourcesContent":["\r\nexport const  todoReducer = (state = [],action) =>{\r\n\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            \r\n            return [...state, action.payload]\r\n    \r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload)\r\n\r\n        case 'toggle':\r\n            return state.map(todo => (todo.id === action.payload) ? {...todo,done: !todo.done} : todo)\r\n        case 'toggle-old':\r\n            return state.map(todo =>{\r\n\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,done:!todo.done}\r\n                }else{\r\n                   return todo; \r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n\r\n} ","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo,handleToggle,handleDelete,index}) => {\r\n    return (\r\n        <li key={todo.id}\r\n            className=\"list-group-item\"\r\n        >\r\n            <p className={`${todo.done && 'complete'}`} onClick={() => handleToggle(todo.id)}>{index + 1}. {todo.desc}</p>\r\n            <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todo,handleToggle,handleDelete}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            todo.map((todo,i) =>(\r\n                                <TodoListItem key ={todo.id} todo={todo} index={i} handleToggle={handleToggle} handleDelete={handleDelete}/>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const Alert = ({message}) => {\r\n    return (\r\n        <div className=\"alert alert-primary p-2 m-2 text-center rounded-0\">\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nAlert.propTypes ={\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { Alert } from './Alert';\r\n\r\nexport const TodoAdd = ({handleAdd}) => {\r\n\r\n    const [{description},handleInput,reset] = useForm({\r\n        description:'' \r\n     });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (description.trim().length <= 1 || description === '') {\r\n            return\r\n        }\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc:description,\r\n            done: false\r\n        };\r\n \r\n        handleAdd( newTodo )\r\n        reset();\r\n    }\r\n    return (\r\n        <>\r\n            <h4 className=\"text-center\">Add new todo</h4>\r\n                    <hr/>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                       value={description}\r\n                        onChange={handleInput}\r\n                        name=\"description\"\r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                         placeholder=\"Description...\" \r\n                         autoComplete=\"off\"></input>\r\n                         <button className=\"btn btn-outline-primary mt-1 w-100\" type=\"submit\">Add new TODO</button>\r\n                    </form>\r\n                    {(description.trim() === '') && <Alert message={'New description'}/>}\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n        setValues(initialState)\r\n    }\r\n    const handleChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    return [values, handleChange,reset]\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\nimport './styles.css'\r\n\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\nconst init =()=>{\r\n\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || []\r\n} \r\nexport const TodoApp = () => {\r\n\r\n\r\n    const [todo, dispatch] = useReducer(todoReducer, [],init);\r\n\r\n  \r\n    const handleDelete = (todoID) => {\r\n       \r\n        const action = {\r\n            type: 'delete',\r\n            payload:todoID\r\n        }\r\n\r\n        dispatch(action)\r\n\r\n    \r\n    }\r\n\r\n    const handleToggle = (todoID) =>{\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload:todoID\r\n        })\r\n    }\r\n\r\n    const handleAdd = ( newTodo ) =>{\r\n\r\n        dispatch({\r\n            \r\n        type:'add',\r\n     payload: newTodo\r\n        })\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos',JSON.stringify(todo))\r\n    }, [todo])\r\n    return (\r\n        <div>\r\n            <h1>TodoApp ( {todo.length} ) </h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList todo={todo} handleDelete={handleDelete} handleToggle={handleToggle} />\r\n                </div>\r\n\r\n                <div className=\"col-5\" id=\"alertt\">\r\n                    <TodoAdd handleAdd={handleAdd}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { FormWithCustomH } from './components/02-useEffect/FormWithCustomH';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealExample } from './components/04-useRef/RealExample';\n// import { LayoutEffect } from './components/05-useLayoutEffect/LayoutEffect';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { HookApp } from './HookApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <TodoApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}